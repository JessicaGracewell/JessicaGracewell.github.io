<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SSH</title>
      <link href="/posts/782a8ece.html"/>
      <url>/posts/782a8ece.html</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-远程连接-Ubuntu-使用-SSH"><a href="#Windows-远程连接-Ubuntu-使用-SSH" class="headerlink" title="Windows 远程连接 Ubuntu 使用 SSH"></a>Windows 远程连接 Ubuntu 使用 SSH</h1><p>在本文中，我将向您展示如何通过 <code>SSH</code> 从 <code>Windows</code> 远程连接到 <code>Ubuntu</code>。<code>SSH</code>（安全外壳协议）是一个提供安全远程登录和其他安全网络服务的协议。</p><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p>在开始之前，请确保您已满足以下条件：</p><p>您拥有一台已安装和运行 <code>Ubuntu</code> 的计算机。<br>您拥有一台已安装 <code>Windows</code> 的计算机。<br>这两台计算机都在同一网络中，或者 <code>Ubuntu</code> 计算机有公开的 <code>IP</code> 地址。</p><h2 id="二、在-Ubuntu-上安装并配置-SSH"><a href="#二、在-Ubuntu-上安装并配置-SSH" class="headerlink" title="二、在 Ubuntu 上安装并配置 SSH"></a>二、在 Ubuntu 上安装并配置 SSH</h2><p>首先，我们需要在 <code>Ubuntu</code> 上安装 <code>SSH</code> 服务器。请打开 <code>Ubuntu</code> 的终端，并输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install openssh-server</span><br></pre></td></tr></table></figure><p>安装完成后，您可以使用以下命令检查 <code>SSH </code>服务器是否正在运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status ssh</span><br></pre></td></tr></table></figure><p>如果 SSH 服务已经启动，那么您会看到状态显示为 “<code>Active: active (running)</code>“。</p><h2 id="三、在-Windows-上生成-SSH-密钥并配置-SSH-客户端"><a href="#三、在-Windows-上生成-SSH-密钥并配置-SSH-客户端" class="headerlink" title="三、在 Windows 上生成 SSH 密钥并配置 SSH 客户端"></a>三、在 Windows 上生成 SSH 密钥并配置 SSH 客户端</h2><p>在<code>Windows</code>机器上，我们将使用<code>Git Bash</code>作为<code>SSH</code>客户端，并用它来生成<code>SSH密钥对</code>。你可以从<code>Git</code>官方下载页面下载并安装<code>Git</code>。</p><h3 id="生成-SSH-密钥"><a href="#生成-SSH-密钥" class="headerlink" title="生成 SSH 密钥"></a>生成 SSH 密钥</h3><p>打开Git Bash，然后输入以下命令来生成一个新的<code>SSH</code>密钥对：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>当提示你输入文件位置时，可以直接按Enter键使用默认位置。然后，你将需要输入一个安全密码。</p><h3 id="在-Ubuntu-添加公钥"><a href="#在-Ubuntu-添加公钥" class="headerlink" title="在 Ubuntu 添加公钥"></a>在 Ubuntu 添加公钥</h3><p>首先，你需要获取你刚刚生成的公钥。在<code>Git Bash</code>中输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>这将显示你的公钥。然后，你需要将这个公钥复制到你的<code>Ubuntu</code>机器上。</p><p>在<code>Ubuntu</code>终端中，打开 <code>~/.ssh/authorized_keys</code> 文件，将你的公钥粘贴进去。你可以使用下面的命令来做这个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;your-public-key&#x27;</span> &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>记得替换 ‘<code>your-public-key</code>‘ 为你实际的公钥。</p><h2 id="四、建立连接"><a href="#四、建立连接" class="headerlink" title="四、建立连接"></a>四、建立连接</h2><p>现在，你已经在两台机器上配置好了<code>SSH</code>，你可以从<code>Windows</code>上的<code>Git Bash</code>通过<code>SSH</code>远程连接到<code>Ubuntu</code>了。在<code>Git Bash</code>中输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh your-username@your-server-ip</span><br></pre></td></tr></table></figure><p>记得替换 ‘<code>your-username</code>‘ 和 ‘<code>your-server-ip</code>‘ 为你的Ubuntu用户名和服务器IP地址。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过<code>SSH</code>，我们可以从<code>Windows</code>远程连接并管理<code>Ubuntu</code>。虽然这需要一些配置，但它为我们提供了一个安全、灵活的远程管理工具。只要有网络连接，你就可以在任何地方远程访问你的<code>Ubuntu</code>机器。</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown</title>
      <link href="/posts/6fc8eab5.html"/>
      <url>/posts/6fc8eab5.html</url>
      
        <content type="html"><![CDATA[<p>这是一个使用 <em>Markdown</em> 语法编写的博客示例。</p><span id="more"></span><h1 id="标题1"><a href="#标题1" class="headerlink" title="标题1"></a>标题1</h1><h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><h3 id="标题3"><a href="#标题3" class="headerlink" title="标题3"></a>标题3</h3><h4 id="标题4"><a href="#标题4" class="headerlink" title="标题4"></a>标题4</h4><h5 id="标题5"><a href="#标题5" class="headerlink" title="标题5"></a>标题5</h5><h6 id="标题6"><a href="#标题6" class="headerlink" title="标题6"></a>标题6</h6><blockquote><p>这是一段引用</p></blockquote><p>把大象塞进冰箱:<br>1.打开冰箱<br>2.把大象塞进去<br>3.观赏冰箱<br>无序列表</p><ul><li>亚洲</li></ul><ul><li>非洲</li></ul><ul><li>欧洲<br>明天要做的事情</li><li><input disabled="" type="checkbox"> …在urat中文表达式中不是逗号但是是空格的一部分。 （但是，如果您的</li><li><input checked="" disabled="" type="checkbox"> 睡觉</li><li><input checked="" disabled="" type="checkbox"> 打豆豆<br>代码块：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BinaryTree</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> TreeNode root;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BinaryTree</span><span class="params">()</span> &#123;</span><br><span class="line">        root = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(value);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">TreeNode</span> <span class="variable">cur</span> <span class="operator">=</span> root;</span><br><span class="line">        <span class="type">TreeNode</span> <span class="variable">parent</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (cur != <span class="literal">null</span>) &#123;</span><br><span class="line">            parent = cur;</span><br><span class="line">            <span class="keyword">if</span> (value &lt; cur.val) cur = cur.left;</span><br><span class="line">            <span class="keyword">else</span> cur = cur.right; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (value &lt; parent.val) parent.left = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(value);</span><br><span class="line">        <span class="keyword">else</span> parent.right = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(value);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">inOrderTraverse</span><span class="params">()</span> &#123;</span><br><span class="line">        inOrderTraverse(root);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">inOrderTraverse</span><span class="params">(TreeNode node)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (node == <span class="literal">null</span>) <span class="keyword">return</span>;</span><br><span class="line">        inOrderTraverse(node.left);</span><br><span class="line">        System.out.print(node.val + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        inOrderTraverse(node.right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TreeNode</span> &#123;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    TreeNode left;</span><br><span class="line">    TreeNode right;</span><br><span class="line">    </span><br><span class="line">    TreeNode(<span class="type">int</span> val) &#123;</span><br><span class="line">        <span class="built_in">this</span>.val = val;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="数学公式："><a href="#数学公式：" class="headerlink" title="数学公式："></a>数学公式：</h1><p>$$$  \[{x_{1,2}} = \frac{{ - b \pm \sqrt {{b^2} - 4ac} }}{{2a}}\]  $$$</p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><table><thead><tr><th align="left">姓名</th><th align="right">年龄</th><th align="center">成绩</th></tr></thead><tbody><tr><td align="left">张三</td><td align="right">19</td><td align="center">99</td></tr><tr><td align="left">educator</td><td align="right">18</td><td align="center">95</td></tr></tbody></table><h1 id="脚注"><a href="#脚注" class="headerlink" title="脚注:"></a>脚注:</h1><p>一键三连<a href="%E7%82%B9%E8%B5%9E%E3%80%81%E6%8A%95%E5%B8%81%E3%80%81%E6%94%B6%E8%97%8F%EF%BC%8C%E6%9C%80%E5%A5%BD%E5%86%8D%E5%85%B3%E6%B3%A8%E4%B8%80%E4%B8%8B%E3%80%82">^三连</a></p><hr><p>哈哈哈哈</p><p><a href="https://baidu.com/" title="一个搜索引擎">百度</a></p><p>[百度][id]<br>[id]:<a href="https://baidu.com/">https://baidu.com</a> “一个搜索引擎”<br>请参考<a href="#%E6%A0%87%E9%A2%981">标题1</a><br>ULR:<br><a href="https://www.baidu.com/">https://www.baidu.com</a></p><p><img src="https://www.baidu.com/img/bd_logo1.png?where=super" alt="百度" title="百度搜索"><br><em>斜体</em><br><strong>加粗</strong><br>printf(),<br><u>下划线</u> , :smile:,<br>$\theta&#x3D;x^2$,<br>H<del>2</del>O,<br> X^2^<br> &#x3D;&#x3D;这是一段高亮文字&#x3D;&#x3D;</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IIS安装</title>
      <link href="/posts/1611c0f4.html"/>
      <url>/posts/1611c0f4.html</url>
      
        <content type="html"><![CDATA[<p>IIS </p><span id="more"></span><center><p><img src="/img/iis/IIS%E5%AE%89%E8%A3%85.001.jpeg"><br><img src="/img/iis/IIS%E5%AE%89%E8%A3%85.002.jpeg"><br><img src="/img/iis/IIS%E5%AE%89%E8%A3%85.003.jpeg"><br><img src="/img/iis/IIS%E5%AE%89%E8%A3%85.004.jpeg"><br><img src="/img/iis/IIS%E5%AE%89%E8%A3%85.005.jpeg"><br><img src="/img/iis/IIS%E5%AE%89%E8%A3%85.006.jpeg"><br><img src="/img/iis/IIS%E5%AE%89%E8%A3%85.007.jpeg"><br><img src="/img/iis/IIS%E5%AE%89%E8%A3%85.008.jpeg"><br><img src="/img/iis/IIS%E5%AE%89%E8%A3%85.009.jpeg"><br><img src="/img/iis/IIS%E5%AE%89%E8%A3%85.010.jpeg">    </center></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows服务器 </tag>
            
            <tag> IIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习路线</title>
      <link href="/posts/6766b576.html"/>
      <url>/posts/6766b576.html</url>
      
        <content type="html"><![CDATA[<p>C语言是一种广泛使用的编程语言，它具有高效、灵活、可移植等特点，被应用于操作系统、嵌入式系统、图形处理、网络编程等领域。学习C语言不仅可以掌握一门强大的工具，还可以培养良好的编程思维和习惯。本文将介绍一种适合初学者的C语言学习路线，希望能够帮助你快速入门和提高。 </p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>首先，你需要了解C语言的基本概念和语法，包括数据类型、变量、常量、运算符、表达式、输入输出、控制流程、函数、数组、指针等。这些是C语言的核心内容，也是后续学习的基础。你可以通过阅读经典的教材《C程序设计语言》（K&amp;R）或者《C Primer Plus》来学习这些知识，也可以参考一些在线的教程和视频课程，如<a href="https://www.runoob.com/cprogramming/c-tutorial.html">菜鸟教程</a>或<a href="https://www.imooc.com/learn/249">慕课网</a>。在学习的过程中，你需要多做练习，尝试编写一些简单的程序，如计算器、猜数字游戏、排序算法等，来巩固你的理解和技能。 </p><h2 id="进阶知识"><a href="#进阶知识" class="headerlink" title="进阶知识"></a>进阶知识</h2><p>在掌握了C语言的基础知识后，你可以进一步学习一些进阶的知识和技巧，如结构体、联合体、枚举、位运算、预处理器、文件操作、内存管理、错误处理等。这些知识可以让你更深入地理解C语言的工作原理和特性，也可以让你编写更复杂和高效的程序。你可以通过阅读《C和指针》或《C陷阱与缺陷》来学习这些知识，也可以参考一些在线的资源，如<a href="https://www.geeksforgeeks.org/c-programming-language/">GeeksforGeeks</a>或<a href="http://c.biancheng.net/c/">C语言中文网</a>。在学习的过程中，你需要多阅读一些优秀的开源代码，如<a href="https://github.com/torvalds/linux">Linux内核</a>或<a href="https://github.com/sqlite/sqlite">SQLite</a>，来观察和模仿一些编程规范和惯用法。 </p><h2 id="实践项目"><a href="#实践项目" class="headerlink" title="实践项目"></a>实践项目</h2><p>在学习了C语言的进阶知识后，你可以尝试用C语言实现一些实用的项目，如简单的计算器、文本编辑器、聊天室、HTTP服务器等。这些项目可以让你将所学的知识应用于实际问题中，也可以让你锻炼你的编程能力和解决问题的能力。你可以通过参考一些在线的教程和案例来实现这些项目，如<a href="https://www.udemy.com/course/learn-c-by-building-projects/">Learn C by Building Projects</a>或<a href="https://www.programiz.com/c-programming/projects">C Projects</a>。在实现项目的过程中，你需要多使用一些工具和库来辅助你的开发，如编译器（gcc）、调试器（gdb）、版本控制（git）、标准库（libc）、数学库（math.h）、字符串库（string.h）等。 </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>C语言是一种广泛使用的编程语言，它具有高效、灵活、可移植等特点，被应用于操作系统、嵌入式系统、图形处理、网络编程等领域。学习C语言不仅可以掌握一门强大的工具，还可以培养良好的编程思维和习惯。本文将介绍一种适合初学者的C语言学习路线，希望能够帮助你快速入门和提高。 </p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的大学生活</title>
      <link href="/posts/ac61edc7.html"/>
      <url>/posts/ac61edc7.html</url>
      
        <content type="html"><![CDATA[<h1 id="我的大学生活"><a href="#我的大学生活" class="headerlink" title="我的大学生活"></a>我的大学生活</h1><p>大家好，我是一名大三的学生，今天想和大家分享一下我的大学生活，以及我是如何用markdown语法来写博客的。 </p><h2 id="大学生活的点滴"><a href="#大学生活的点滴" class="headerlink" title="大学生活的点滴"></a>大学生活的点滴</h2><p>我的大学生活可以用三个词来概括：忙碌、充实、快乐。忙碌是因为我有很多的课程要学习，很多的作业要完成，很多的考试要准备。充实是因为我在学习之余，也参加了很多的社团活动，结交了很多的朋友，拓展了自己的视野。快乐是因为我在大学里找到了自己的兴趣和方向，也收获了很多的成长和经验。 </p><p>我想给大家举几个例子来具体说明一下我的大学生活。 </p><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p>我需要学习很多的理论知识，比如数据结构、算法、操作系统、数据库等，也需要学习很多的编程语言，比如C、Java、Python等。我觉得学习这些知识不仅能够锻炼我的逻辑思维和解决问题的能力，也能够让我接触到很多的前沿技术和应用场景。 </p><p>我最喜欢的一门课程是人工智能，这门课程让我对人工智能有了一个全面而深入的了解，也让我对未来的发展充满了期待和憧憬。我在这门课程中学习了很多的人工智能相关的概念、方法和技术，比如搜索、规划、机器学习、深度学习等。我还参与了一个人工智能项目，利用深度学习来识别图像中的物体和场景。这个项目让我体验到了人工智能的魅力和潜力，也让我提高了自己的编程和研究能力。 </p><h3 id="社团"><a href="#社团" class="headerlink" title="社团"></a>社团</h3><p>除了学习之外，我还加入了几个社团，比如编程俱乐部、摄影协会、志愿者团队等。这些社团让我有机会和不同专业、不同兴趣、不同背景的同学交流和合作，也让我有机会参与一些有意义和有趣的活动。 </p><p>编程俱乐部是一个由计算机相关专业的同学组成的社团，我们定期举办一些编程比赛、讲座、培训等活动，旨在提高我们的编程水平和竞争力。我在编程俱乐部中认识了很多优秀而热情的同学，他们给了我很多的帮助和启发。我们一起参加过一些国内外的编程比赛，比如ACM国际大学生程序设计竞赛、 </p>]]></content>
      
      
      <categories>
          
          <category> 大学生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署Blog到Ubuntu</title>
      <link href="/posts/f6151073.html"/>
      <url>/posts/f6151073.html</url>
      
        <content type="html"><![CDATA[<h1 id="部署Blog到Ubuntu服务器并启用HTTPS"><a href="#部署Blog到Ubuntu服务器并启用HTTPS" class="headerlink" title="部署Blog到Ubuntu服务器并启用HTTPS"></a>部署Blog到Ubuntu服务器并启用HTTPS</h1><h2 id="一、本地安装Git后注意事项"><a href="#一、本地安装Git后注意事项" class="headerlink" title="一、本地安装Git后注意事项"></a>一、本地安装Git后注意事项</h2><h3 id="【git】报错unsafe-repository-xxx-is-owned-by-someone-else解决方法"><a href="#【git】报错unsafe-repository-xxx-is-owned-by-someone-else解决方法" class="headerlink" title="【git】报错unsafe repository xxx is owned by someone else解决方法"></a>【git】报错unsafe repository xxx is owned by someone else解决方法</h3><p>可以通过加通配符为<code>*</code>,忽略所有文件夹。需要注意,该处理方法一般适用于只有本人一个用户使用的电脑,确保无其它用户,否则存在安全问题。见下方详述。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --add safe.directory &quot;*&quot;</span><br></pre></td></tr></table></figure><h2 id="二、服务器端操作"><a href="#二、服务器端操作" class="headerlink" title="二、服务器端操作"></a>二、服务器端操作</h2><h3 id="参考链接：https-www-jianshu-com-p-16b89f4f7136"><a href="#参考链接：https-www-jianshu-com-p-16b89f4f7136" class="headerlink" title="参考链接：https://www.jianshu.com/p/16b89f4f7136"></a>参考链接：<a href="https://www.jianshu.com/p/16b89f4f7136">https://www.jianshu.com/p/16b89f4f7136</a></h3><h3 id="1-安装Git和Nginx"><a href="#1-安装Git和Nginx" class="headerlink" title="1. 安装Git和Nginx"></a>1. 安装Git和Nginx</h3><p>Git 用于版本管理和部署,Nginx 用于静态博客托管。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install git nginx -y</span><br></pre></td></tr></table></figure><h3 id="2-创建Git仓库"><a href="#2-创建Git仓库" class="headerlink" title="2. 创建Git仓库"></a>2. 创建Git仓库</h3><p>在<code>/var/repo/</code>下创建名为<code>hexo_static</code>的裸仓库。使用如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/repo/</span><br><span class="line">sudo chown -R $USER:$USER /var/repo/ </span><br><span class="line">sudo chmod -R 755 /var/repo/</span><br><span class="line"></span><br><span class="line">cd /var/repo/</span><br><span class="line">git init --bare hexo_static.git</span><br></pre></td></tr></table></figure><h3 id="3-配置Nginx托管文件目录"><a href="#3-配置Nginx托管文件目录" class="headerlink" title="3. 配置Nginx托管文件目录"></a>3. 配置Nginx托管文件目录</h3><p>创建<code>/var/www/hexo</code>目录,用于Nginx托管,修改目录所有权和权限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /var/www/hexo</span><br><span class="line"></span><br><span class="line">sudo chown -R $USER:$USER /var/www/hexo  </span><br><span class="line">sudo chmod -R 755 /var/www/hexo</span><br></pre></td></tr></table></figure><p>随后修改Nginx的<code>default</code>设置,使<code>root</code>指向<code>hexo</code>目录. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p>注意一定要加<code>sudo</code>,否则会提醒<code>default</code>是只读文件.<br>修改文件中对应的项</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server; </span><br><span class="line">    listen [::]:80 default_server ipv6only=on;</span><br><span class="line"></span><br><span class="line">    root /var/www/hexo; # 需要修改的部分  </span><br><span class="line">    index index.html index.htm;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Vim的操作方法比较特殊,可以在网上查查<br>重启Nginx服务,使得改动生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure><h3 id="4-创建Git钩子"><a href="#4-创建Git钩子" class="headerlink" title="4. 创建Git钩子"></a>4. 创建Git钩子</h3><p>不清楚钩子是什么<br>在自动生成的 hooks 目录下创建一个新的钩子文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/repo/hexo_static.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>在该文件中添加两行代码,指定 Git 的工作树(源代码)和 Git 目录(配置文件等)。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">git --work-tree=/var/www/hexo --git-dir=/var/repo/hexo_static.git checkout -f</span><br></pre></td></tr></table></figure><p>保存并退出文件,并让该文件变为可执行文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /var/repo/hexo_static.git/hooks/post-receive </span><br></pre></td></tr></table></figure><h3 id="5-修改Hexo的默认配置"><a href="#5-修改Hexo的默认配置" class="headerlink" title="5. 修改Hexo的默认配置"></a>5. 修改Hexo的默认配置</h3><p>在站点<code>config.yml</code>中修改博客的地址<code>url</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://server-ip</span> <span class="comment"># 没有绑定域名时填写服务器的实际 IP 地址。  </span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br></pre></td></tr></table></figure><h3 id="6-通过Git部署"><a href="#6-通过Git部署" class="headerlink" title="6. 通过Git部署"></a>6. 通过Git部署</h3><p>再编辑Hexo的<code>config.yml</code>文件,找到Deployment,修改为</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">ubuntu@server_ip:/var/repo/hexo_static.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>最后记得安装Hexo部署到Git仓库的包.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>于是就可用<code>hexo d</code>命令来部署了。大功告成。</p><h2 id="三：开启https"><a href="#三：开启https" class="headerlink" title="三：开启https"></a>三：开启https</h2><h3 id="参考链接：https-developer-aliyun-com-article-761236"><a href="#参考链接：https-developer-aliyun-com-article-761236" class="headerlink" title="参考链接：https://developer.aliyun.com/article/761236"></a>参考链接：<a href="https://developer.aliyun.com/article/761236">https://developer.aliyun.com/article/761236</a></h3><p>备注：配置目录在 <code>/etc/nginx/sites-enabled</code>下 </p><h3 id="1-配置SSL证书"><a href="#1-配置SSL证书" class="headerlink" title="1.配置SSL证书"></a>1.配置SSL证书</h3><p>我这里用的是有限期一年的ssl证书  腾讯云nginx根据域名下载两个文件 1.pem 1.key</p><h3 id="2-配置ca证书-："><a href="#2-配置ca证书-：" class="headerlink" title="2.配置ca证书  ："></a>2.配置ca证书  ：</h3><h4 id="2-1配置文件上传"><a href="#2-1配置文件上传" class="headerlink" title="2.1配置文件上传"></a>2.1配置文件上传</h4><p>进入nginx的安装目录<code>/etc/nginx/</code>，增加<code>cert/</code>文件夹，把刚刚下载的两个文件上传到<code>cert/</code>文件夹中。</p><h4 id="2-2-配置nginx文件"><a href="#2-2-配置nginx文件" class="headerlink" title="2.2 配置nginx文件"></a>2.2 配置nginx文件</h4><p>在<code>/etc/nginx/sites-enabled/</code>下，增加<code>jessicagracewell.top</code>文件。内容如下：</p><p>说明：下面的配置是对<code>443</code>端口和<code>80</code>端口进行监听，<code>443</code>端口要启用<code>ssl</code>。监听<code>443</code>端口的server配置可以仿照上面ca认证页面的nginx配置示例进行配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name jessicagracewell.top www.jessicagracewell.top; </span><br><span class="line"></span><br><span class="line">    root /var/www/hexo; </span><br><span class="line">    index index.html index.htm;</span><br><span class="line"></span><br><span class="line">    ssl_certificate  cert/1.pem;</span><br><span class="line">    ssl_certificate_key cert/1.key;</span><br><span class="line">    ssl_session_timeout 5m;</span><br><span class="line">    ssl_protocols TLSv1.2 TLSv1.3;</span><br><span class="line">    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">    add_header Strict-Transport-Security &quot;max-age=31536000; includeSubDomains&quot; always;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name jessicagracewell.top  www.jessicagracewell.top;</span><br><span class="line">    return 301 https://$host$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-3-检查并启用nginx配置"><a href="#2-3-检查并启用nginx配置" class="headerlink" title="2.3 检查并启用nginx配置"></a>2.3 检查并启用nginx配置</h4><p>配置完成后，检查一下nginx配置文件是否可用，有successful表示可用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t // 检查nginx配置文件</span><br></pre></td></tr></table></figure><p>配置正确后，重新加载配置文件使配置生效：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload // 使配置生效</span><br></pre></td></tr></table></figure><p>至此，nginx的https访问就完成了，并且通过rewrite方式把所有http请求也转成了https请求，更加安全。</p><p>如需重启nginx，用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service nginx stop // 停止</span><br><span class="line">service nginx start // 启动</span><br><span class="line">service nginx restart // 重启</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习Linux路线</title>
      <link href="/posts/e6fd4366.html"/>
      <url>/posts/e6fd4366.html</url>
      
        <content type="html"><![CDATA[<h1 id="学习Linux服务器路线"><a href="#学习Linux服务器路线" class="headerlink" title="学习Linux服务器路线"></a>学习Linux服务器路线</h1><p>Linux是一种开源的操作系统，它可以运行在各种设备上，包括服务器。学习Linux服务器可以让你掌握一些基本的系统管理、网络配置、安全防护等技能，为你的职业发展或个人兴趣提供帮助。本文将介绍一条学习Linux服务器的路线，希望能给你一些启发和指导。 </p><h2 id="一、了解Linux基础知识"><a href="#一、了解Linux基础知识" class="headerlink" title="一、了解Linux基础知识"></a>一、了解Linux基础知识</h2><p>在学习Linux服务器之前，你需要先了解一些Linux的基础知识，比如： </p><ul><li><p>Linux的历史和发展 </p></li><li><p>Linux的主要特点和优势 </p></li><li><p>Linux的常用发行版和版本 </p></li><li><p>Linux的文件系统和目录结构 </p></li><li><p>Linux的基本命令和操作</p></li></ul><p>这些知识可以让你对Linux有一个大致的认识，为后续的学习打下基础。你可以通过阅读书籍、网站、博客等资料来获取这些知识，也可以通过在线课程、视频教程等方式来学习。 </p><h2 id="二、安装和配置Linux服务器"><a href="#二、安装和配置Linux服务器" class="headerlink" title="二、安装和配置Linux服务器"></a>二、安装和配置Linux服务器</h2><p>在了解了Linux的基础知识后，你就可以开始安装和配置Linux服务器了。你可以选择一台物理机或者一台虚拟机作为你的Linux服务器，根据你的需求和喜好选择一个合适的Linux发行版和版本进行安装。在安装过程中，你需要注意一些选项和设置，比如： </p><ul><li><p>磁盘分区和挂载 </p></li><li><p>网络设置和主机名 </p></li><li><p>用户和密码 </p></li><li><p>软件包和更新</p></li></ul><p>在安装完成后，你需要对Linux服务器进行一些基本的配置，比如： </p><ul><li><p>设置时区和语言 </p></li><li><p>安装必要的软件包和工具 </p></li><li><p>配置SSH服务和防火墙 </p></li><li><p>创建普通用户和赋予sudo权限</p></li></ul><p>这些配置可以让你的Linux服务器更加安全和方便使用。你可以通过阅读官方文档、手册、教程等资料来完成这些配置，也可以通过搜索引擎、社区、论坛等平台来寻求帮助。 </p><h2 id="三、掌握Linux服务器常用技能"><a href="#三、掌握Linux服务器常用技能" class="headerlink" title="三、掌握Linux服务器常用技能"></a>三、掌握Linux服务器常用技能</h2><p>在安装和配置好Linux服务器后，你就可以开始掌握一些Linux服务器常用的技能了，比如： </p><ul><li><p>Linux服务器的启动、关机、重启等操作 </p></li><li><p>Linux服务器的监控、维护、优化等管理 </p></li><li><p>Linux服务器的用户、组、权限等控制 </p></li><li><p>Linux服务器的进程、服务、任务等调度 </p></li><li><p>Linux服务器的文件、目录、文本等处理 </p></li><li><p>Linux服务器的网络、域名、邮件等配置 </p></li><li><p>Linux服务器的备份、恢复、迁移等操作</p></li></ul><p>这些技能可以让你更加熟练地使用Linux服务器，为你提供更多的可能性和灵活性。你可以通过实践练习、案例分析、项目实战等方式来掌握这些技能，也可以通过参考资料、博客文章、视频教程等方式来学习。 </p><h2 id="四、深入学习Linux服务器高级主题"><a href="#四、深入学习Linux服务器高级主题" class="headerlink" title="四、深入学习Linux服务器高级主题"></a>四、深入学习Linux服务器高级主题</h2><p>在掌握了Linux服务器常用技能后，你就可以深入学习一些Linux服务器高级主题了，比如： </p><ul><li><p>Linux服务器的内核原理和架构 </p></li><li><p>Linux服务器的性能分析和调优 </p></li><li><p>Linux服务器的安全防护和渗透测试 </p></li><li><p>Linux服务器的虚拟化和容器化技术 </p></li><li><p>Linux服务器的集群和分布式系统</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习服务器路线</title>
      <link href="/posts/5f20dbc.html"/>
      <url>/posts/5f20dbc.html</url>
      
        <content type="html"><![CDATA[<h1 id="学习服务器路线"><a href="#学习服务器路线" class="headerlink" title="学习服务器路线"></a>学习服务器路线</h1><p>你有没有想过学习服务器路线？如果你对网络技术感兴趣，或者想要提高你的编程能力，那么学习服务器路线是一个很好的选择。服务器路线是指使用服务器端的语言和框架来开发网站或应用程序的过程。服务器端的语言和框架有很多，比如PHP，Python，Ruby，Node.js等。每种语言和框架都有自己的特点和优势，你可以根据你的兴趣和需求来选择合适的工具。 </p><p>学习服务器路线有很多好处，下面我就列举一些： </p><ul><li><p>你可以学习到更多的网络知识，比如HTTP协议，RESTful API，数据库，安全等。 </p></li><li><p>你可以提高你的编程能力，比如逻辑思维，数据结构，算法，设计模式等。 </p></li><li><p>你可以开发出更多的网站或应用程序，比如博客，社交网络，电商平台等。 </p></li><li><p>你可以拓展你的职业发展，比如成为全栈开发者，后端开发者，DevOps工程师等。</p></li></ul><p>学习服务器路线并不难，只要你有一定的基础知识和学习热情，就可以开始你的学习之旅。下面我就给出一些学习服务器路线的建议： </p><ul><li><p>首先，你需要选择一种服务器端的语言和框架。你可以根据你的兴趣和需求来选择，也可以参考一些在线的教程或课程来了解不同的语言和框架的特点和优势。 </p></li><li><p>其次，你需要安装和配置好你的开发环境。你需要安装好你选择的语言和框架所需的软件和工具，比如编辑器，终端，浏览器等。你也需要配置好你的本地服务器和数据库，以便于测试和调试你的代码。 </p></li><li><p>第三，你需要学习和实践一些基本的服务器端的知识和技能。你需要了解HTTP协议的工作原理和常用的方法和状态码。你需要学习如何使用服务器端的语言和框架来编写代码，处理请求和响应，实现路由和控制器，操作数据库和模型等。你需要学习如何使用RESTful API来设计和开发接口。你需要学习如何保证你的代码的质量和安全性，比如使用版本控制，测试工具，加密技术等。 </p></li><li><p>最后，你需要不断地练习和项目化你的学习成果。你需要通过编写一些小型的网站或应用程序来巩固和深化你的知识和技能。你也可以参与一些开源项目或社区活动来提高你的协作能力和沟通能力。你还可以通过阅读一些优秀的代码或文章来拓展你的视野和思维。</p></li></ul><p>总之，学习服务器路线是一个非常有意义和有趣的过程。只要你有兴趣和热情，就可以从中获得很多收获和乐趣。希望我的博客能够给你一些启发和帮助。如果你有任何问题或建议，请在评论区留言。谢谢！ </p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夕阳</title>
      <link href="/posts/b5b10a59.html"/>
      <url>/posts/b5b10a59.html</url>
      
        <content type="html"><![CDATA[<h1 id="夕阳"><a href="#夕阳" class="headerlink" title="夕阳"></a>夕阳</h1><p>夕阳，是一种美丽而又伤感的景象，它给人们带来了无限的遐想和感慨。我想，每个人都有过欣赏夕阳的经历，也都有过自己的心情和故事。今天，我就想和大家分享一下我对夕阳的一些感受和思考。</p><h2 id="夕阳的美"><a href="#夕阳的美" class="headerlink" title="夕阳的美"></a>夕阳的美</h2><p>夕阳的美，是一种难以言喻的美。它不像朝阳那样充满了希望和活力，也不像中午的阳光那样炽热和耀眼，它是一种温柔而又悲凉的美，是一种含蓄而又深刻的美。</p><p>我喜欢在傍晚的时候，找一个安静的地方，看着夕阳缓缓地落下，看着天空中的云彩变换着各种颜色，看着大地上的万物被染上了一层金色的光辉。我觉得这是一种最纯粹的享受，是一种最美好的心境。</p><p>夕阳有时候像一轮火红的大球，悬挂在天边，仿佛要把自己的热情和魅力全部释放出来。有时候像一只柔和的灯笼，温暖地照耀着大海和陆地，给人们带来了安宁和温馨。有时候又像一个调皮的孩子，在山与水的边缘跳跃着，玩弄着光影和色彩。</p><p>夕阳的美，是一种无法复制的美。它每天都在变化，每天都在创造新的奇迹。它让我们看到了自然界的多样性和丰富性，也让我们感受到了生命的短暂和珍贵。</p><h2 id="夕阳的意"><a href="#夕阳的意" class="headerlink" title="夕阳的意"></a>夕阳的意</h2><p>夕阳的意，是一种难以忘怀的意。它给人们带来了无限的回忆和感动。我想，每个人都有过与夕阳相关的故事，也都有过自己的喜怒哀乐。今天，我就想和大家分享一下我与夕阳相关的一些故事和情感。</p><p>我记得小时候，我最喜欢跟着爷爷去放牛。我们会走到村外的小河边，看着水面上泛起一层层涟漪，听着河边的鸟儿叽叽喳喳地叫着。当太阳快要落山的时候，爷爷会吹响口哨，把牛群赶回家。我会跟在他身后，看着他那高大而挺拔的背影，在夕阳中显得格外威严而亲切。</p><p>我记得上学时候，我最喜欢跟同学们去打篮球。我们会在操场上奋力地奔跑和跳跃</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梨花开了，春天来了</title>
      <link href="/posts/bfccf79c.html"/>
      <url>/posts/bfccf79c.html</url>
      
        <content type="html"><![CDATA[<h1 id="梨花开了，春天来了"><a href="#梨花开了，春天来了" class="headerlink" title="梨花开了，春天来了"></a>梨花开了，春天来了</h1><p>春天是我最喜欢的季节，因为春天有梨花。梨花是我最喜欢的花，因为梨花有一种清新的香气，让人心旷神怡。梨花的颜色也很美，有白色、粉色、淡黄色等等，像一片片云彩，点缀在绿色的枝叶中。</p><p>我记得去年的春天，我和我的朋友们一起去了一个梨园，那里有成千上万的梨树，都开满了花。我们在梨花海中走走停停，拍了很多照片，感受着春天的气息。我们还采了一些梨花，放在水杯里，泡了一壶梨花茶，喝着甘甜的茶水，聊着天，真是一种享受。</p><p>我觉得梨花不仅美丽，还很有意义。梨花是一种坚强的花，它能在寒冷的冬天里抵抗风雪，等到春天来临时，才绽放出它的美丽。梨花也是一种谦逊的花，它不像其他的花那样鲜艳夺目，它只是静静地散发着它的香气，不求回报。梨花还是一种有用的花，它不仅能给人们带来美的享受，还能结出甜美的果实，滋养人们的身心。</p><p>我希望今年的春天，我还能看到梨花开放的景象，感受梨花带给我的快乐。我也希望你们能和我一样，爱上梨花，爱上春天。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 梨花 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的美食之旅</title>
      <link href="/posts/6e78f5b3.html"/>
      <url>/posts/6e78f5b3.html</url>
      
        <content type="html"><![CDATA[<h1 id="我的美食之旅"><a href="#我的美食之旅" class="headerlink" title="我的美食之旅"></a>我的美食之旅</h1><p>你好，亲爱的读者，欢迎来到我的美食博客！今天我要和你分享我最近的一次美食之旅，希望你能喜欢！</p><h2 id="旅行的目的地"><a href="#旅行的目的地" class="headerlink" title="旅行的目的地"></a>旅行的目的地</h2><p>我这次的旅行目的地是<strong>四川</strong>，一个有着悠久历史和丰富文化的地方，也是一个以辣闻名的美食天堂。我一直很喜欢吃辣，所以我对四川菜非常感兴趣，想要亲自品尝一下那些麻辣鲜香的佳肴。</p><h2 id="旅行的时间"><a href="#旅行的时间" class="headerlink" title="旅行的时间"></a>旅行的时间</h2><p>我选择了<strong>10月</strong>作为我的旅行时间，因为这个时候四川的天气比较适宜，不太热也不太冷，而且正好赶上了秋收的季节，可以吃到很多新鲜的水果和蔬菜。</p><h2 id="旅行的行程"><a href="#旅行的行程" class="headerlink" title="旅行的行程"></a>旅行的行程</h2><p>我在四川待了<strong>一周</strong>，期间我去了很多地方，品尝了很多美食，下面我就来简单介绍一下我的行程和美食体验吧！</p><h3 id="第一天：成都"><a href="#第一天：成都" class="headerlink" title="第一天：成都"></a>第一天：成都</h3><p>我从北京坐飞机到达了成都，成都是四川的省会，也是一个非常繁华和现代化的城市。我在机场打车到了我的酒店，然后就出发去了我的第一个目的地：<strong>宽窄巷子</strong>。</p><p>宽窄巷子是成都最有特色的历史街区之一，它由宽巷子、窄巷子和井巷子三条平行的街道组成，沿街有很多古色古香的建筑和店铺，可以感受到浓浓的成都风情。我在这里逛了一会儿，然后就去了一家很有名的餐馆：<strong>陈麻婆豆腐</strong>。</p><p>陈麻婆豆腐是四川菜中最经典的一道菜，它由嫩滑的豆腐、鲜香的牛肉末、红油、花椒、豆瓣酱等调料烹制而成，口感麻辣鲜嫩，非常开胃。我点了一份麻婆豆腐和一碗米饭，然后就开始大快朵颐。我觉得这是我吃过的最好吃的麻婆豆腐，没有之一！</p><p><img src="/img/background/19.jpeg" alt="麻婆豆腐"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美食 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HelloTalk</title>
      <link href="/posts/2d58b7db.html"/>
      <url>/posts/2d58b7db.html</url>
      
        <content type="html"><![CDATA[<h1 id="HelloTalk"><a href="#HelloTalk" class="headerlink" title="HelloTalk"></a>HelloTalk</h1><p>大家好，我是Jessica Gracewell，今天我想和大家分享一下我学习英语的经历和心得。我从小就对英语感兴趣，但是一直没有找到合适的方法和机会来提高我的英语水平。直到去年，我发现了一个很好的在线平台，它可以让我和来自世界各地的英语母语者进行交流和学习。这个平台叫做<strong>HelloTalk</strong>，它是一个基于社交网络的语言学习应用，它可以让你找到和你想学习的语言相匹配的语伴，然后通过文字、语音、视频等方式进行沟通和互动。你可以在这里学习不同的文化、习惯、口音、俚语等，也可以在这里结交很多新朋友。 </p><p>我在HelloTalk上注册了一个账号，然后选择了我想学习的语言（英语）和我的母语（中文）。接着，我就可以看到很多和我有相同或相似兴趣的英语母语者，他们也想学习中文。我可以给他们发消息，或者回复他们的消息，开始一段有趣的对话。有时候，我们会用语音或视频聊天，这样可以提高我的听力和口语能力。有时候，我们会互相纠正对方的语法或发音错误，这样可以提高我的写作和阅读能力。有时候，我们会分享一些有趣的图片或视频，这样可以增加我的词汇量和表达能力。 </p><p>通过HelloTalk，我感觉我的英语水平有了很大的提升。我不再害怕和外国人交流，我也不再觉得英语是一门难学的语言。我觉得英语是一门很有趣、很有用、很有魅力的语言。我希望通过这篇博客，能够激励更多的人去学习英语，或者其他你感兴趣的外语。如果你也想试试HelloTalk，你可以点击<a href="https://www.hellotalk.com/">这里</a>下载它。谢谢大家的阅读，下次再见！ </p>]]></content>
      
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的2022年度总结</title>
      <link href="/posts/400e1917.html"/>
      <url>/posts/400e1917.html</url>
      
        <content type="html"><![CDATA[<h1 id="我的2022年度总结"><a href="#我的2022年度总结" class="headerlink" title="我的2022年度总结"></a>我的2022年度总结</h1><p>亲爱的读者们，你们好！我是你们的博主，今天我想和你们分享一下我的2022年度总结。这一年对我来说是非常特别和充实的一年，我经历了很多挑战和成长，也收获了很多喜悦和感动。我想用markdown语法来写这篇博客，希望你们喜欢！ </p><h2 id="我的学习"><a href="#我的学习" class="headerlink" title="我的学习"></a>我的学习</h2><p>2022年，我也没有放弃学习，我报名了一个在线课程，学习了人工智能方面的知识。我觉得人工智能是未来的趋势，也是我感兴趣的领域。通过这个课程，我学习了很多基础和进阶的内容，比如机器学习、深度学习、自然语言处理等等。我也动手做了一些实践项目，比如图像识别、文本生成、情感分析等等。我觉得这些项目非常有趣和有用，也提高了我的编程能力和创造力。我还结识了一些志同道合的同学，我们经常互相交流和讨论，也成为了好朋友。 </p><h2 id="我的生活"><a href="#我的生活" class="headerlink" title="我的生活"></a>我的生活</h2><p>2022年，我也没有忽略我的生活，我努力平衡工作和生活的关系。我每天都坚持运动，比如跑步、游泳、打球等等。我觉得运动可以让我保持健康和活力，也可以释放压力和负面情绪。我也经常旅行，去一些美丽和有趣的地方，比如北京、上海、西藏、云南等等。我觉得旅行可以让我开阔视野和心胸，也可以增加我的知识和见识。我还经常阅读，看一些有意义和有价值的书籍，比如小说、散文、传记等等。我觉得阅读可以让我提高我的文化素养和思维能力，也可以给我带来启发和灵感。 </p><h2 id="我的感想"><a href="#我的感想" class="headerlink" title="我的感想"></a>我的感想</h2><p>2022年，是我人生中非常重要和难忘的一年。这一年，我收获了很多，也付出了很多。这一年，我遇到了很多人，也告别了很多人。 </p>]]></content>
      
      
      <categories>
          
          <category> 年度总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 年度总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的生活</title>
      <link href="/posts/18e92b22.html"/>
      <url>/posts/18e92b22.html</url>
      
        <content type="html"><![CDATA[<h1 id="我的生活博客"><a href="#我的生活博客" class="headerlink" title="我的生活博客"></a>我的生活博客</h1><p>你好，欢迎来到我的生活博客！在这里，我会分享我每天的点滴，和你们交流我的感受和想法。我希望你们能喜欢我的博客，也欢迎你们留言给我反馈和建议。 </p><p>今天是一个美好的一天，我早上起床后，就去了公园散步，呼吸了新鲜的空气，欣赏了美丽的风景。我觉得这是一个很好的习惯，可以让我放松身心，准备好迎接一天的挑战。我拍了一些照片，想和你们分享一下。 </p><p><img src="/img/background/12.jpg" alt="公园的湖"> </p><p><img src="/img/background/13.png" alt="公园的花"> </p><p>公园里有很多人，有的在跑步，有的在打太极拳，有的在遛狗，有的在钓鱼。我觉得他们都很快乐，也很健康。我也想学习他们的精神，多参与一些户外活动，锻炼身体，增强免疫力。 </p><p>下午，我去了图书馆，借了几本书，打算在家里看。我喜欢读书，因为读书可以开阔我的视野，增长我的知识，激发我的想象力。我借了一本小说，一本历史书，和一本科普书。我觉得这些书都很有趣，也很有价值。我会在下次的博客里给你们介绍一下这些书的内容和感想。 </p><p><img src="/img/background/14.jpg" alt="我借的书"> </p><p>晚上，我和朋友一起去吃了火锅，吃得很饱很满足。我们边吃边聊天，谈论了我们的工作，生活，爱情等等话题。我们都很开心，也很互相支持。我觉得朋友是生命中最宝贵的财富之一，我们应该珍惜彼此的友情，多花时间相处。 </p><p><img src="/img/background/15.png" alt="我们吃火锅"> </p><p>今天就是这样啦，谢谢你们陪我聊到这里。如果你们喜欢我的博客，请给我点赞和关注哦！也请告诉我你们今天都做了什么，有什么想和我分享的。期待你们的留言！再见！ </p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
